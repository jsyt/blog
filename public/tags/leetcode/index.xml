<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LeetCode on luke's blog</title><link>https://goyth.cn/tags/leetcode/</link><description>Recent content in LeetCode on luke's blog</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2019, Weru and the Hugo Authors; all rights reserved.</copyright><lastBuildDate>Wed, 26 Feb 2020 21:53:54 +0800</lastBuildDate><atom:link href="https://goyth.cn/tags/leetcode/index.xml" rel="self" type="application/rss+xml"/><item><title>LeetCode 30. 串联所有单词的子串</title><link>https://goyth.cn/post/leetcode30/</link><pubDate>Wed, 26 Feb 2020 21:53:54 +0800</pubDate><guid>https://goyth.cn/post/leetcode30/</guid><description>给定一个字符串 &lt;strong>s&lt;/strong> 和一些长度相同的单词 &lt;strong>words&lt;/strong>找出 &lt;strong>s&lt;/strong> 中恰好可以由 &lt;strong>words&lt;/strong> 中所有单词串联形成的子串的起始位置。
注意子串要与 &lt;strong>words&lt;/strong> 中的单词完全匹配，中间不能有其他字符，但不需要考虑 &lt;strong>words&lt;/strong>中单词串联的顺序。</description></item></channel></rss>