<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RegExp on GOYTH</title>
    <link>https://goyth.cn/tags/regexp/</link>
    <description>Recent content in RegExp on GOYTH</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Apr 2018 21:53:54 +0800</lastBuildDate>
    
	<atom:link href="https://goyth.cn/tags/regexp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaScript 正则表达式</title>
      <link>https://goyth.cn/2018/04/01/jsregexp/</link>
      <pubDate>Sun, 01 Apr 2018 21:53:54 +0800</pubDate>
      
      <guid>https://goyth.cn/2018/04/01/jsregexp/</guid>
      <description>正则表达式 一种几乎可以在所有的程序设计语言里和所有的计算机平台上使用的文字处理工具。它可以用来查找特定的信息（搜索），也可以用来查找并编辑特定的信息（替换）。 核心是 匹配，匹配位置或者匹配字符
先简单的介绍一下语法 基本元字符   .： 匹配除了换行符之外的任何单个字符
  \ ： 在非特殊字符之前的反斜杠表示下一个字符是特殊的，不能从字面上解释。例如，没有前\的&#39;b&#39;通常匹配小写&#39;b&#39;，无论它们出现在哪里。如果加了&#39;\&#39;,这个字符变成了一个特殊意义的字符，反斜杠也可以将其后的特殊字符，转义为字面量。例如，模式 /a*/ 代表会匹配 0 a。相反，模式 /a\*/ 将 &#39; * &#39; 的特殊性移除，从而可以匹配像 &amp;quot;a*&amp;quot; 这样的字符串。
  | ： 逻辑或操作符</description>
    </item>
    
  </channel>
</rss>