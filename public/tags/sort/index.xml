<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sort on Luke&#39;s blog</title>
    <link>https://ytop.net/tags/sort/</link>
    <description>Recent content in Sort on Luke&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2020 Luke. All rights reserved.</copyright>
    <lastBuildDate>Fri, 09 Feb 2018 21:53:54 +0800</lastBuildDate>
    
	<atom:link href="https://ytop.net/tags/sort/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>排序算法之堆排序</title>
      <link>https://ytop.net/post/heapsort/</link>
      <pubDate>Fri, 09 Feb 2018 21:53:54 +0800</pubDate>
      
      <guid>https://ytop.net/post/heapsort/</guid>
      <description>排序算法总览：
堆排序 二叉树 要了解堆首先得了解一下二叉树，在计算机科学中，二叉树是每个节点最多有两个子树的树结构。通常子树被称作“左子树”（left subtree）和“右子树”（right subtree）。二叉树常被用于实现二叉查找树和二叉堆。
二叉树的每个结点至多只有二棵子树（不存在度大于 2 的结点），二叉树的子树有左右之分，次序不能颠倒。二叉树的第 i 层至多有 2i - 1 个结点；深度为 k 的二叉树至多有 2k - 1 个结点；对任何一棵二叉树 T，如果其终端结点数为 n0，度为 2 的结点数为 n2，则n0 = n2 + 1。
树和二叉树的三个主要差别：
 树的结点个数至少为 1，而二叉树的结点个数可以为 0 树中结点的最大度数没有限制，而二叉树结点的最大度数为 2 树的结点无左、右之分，而二叉树的结点有左、右之分  二叉树又分为完全二叉树（complete binary tree）和满二叉树（full binary tree）
满二叉树：一棵深度为 k，且有 2k - 1 个节点称之为满二叉树
完全二叉树：深度为 k，有 n 个节点的二叉树，当且仅当其每一个节点都与深度为 k 的满二叉树中序号为 1 至 n 的节点对应时，称之为完全二叉树
什么是堆？ 堆（二叉堆）可以视为一棵完全的二叉树，完全二叉树的一个“优秀”的性质是，除了最底层之外，每一层都是满的，这使得堆可以利用数组来表示（普通的一般的二叉树通常用链表作为基本容器表示），每一个结点对应数组中的一个元素。
如下图，是一个堆和数组的相互关系
对于给定的某个结点的下标 i，可以很容易的计算出这个结点的父结点、孩子结点的下标：
 Parent(i) = floor(i/2)，i 的父节点下标 Left(i) = 2i，i 的左子节点下标 Right(i) = 2i + 1，i 的右子节点下标  二叉堆一般分为两种：最大堆和最小堆。</description>
    </item>
    
    <item>
      <title>排序算法之归并排序</title>
      <link>https://ytop.net/post/mergesort/</link>
      <pubDate>Fri, 09 Feb 2018 21:53:54 +0800</pubDate>
      
      <guid>https://ytop.net/post/mergesort/</guid>
      <description>归并排序（MERGE-SORT）是建立在归并操作上的一种有效的排序算法,该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为二路归并。
归并排序可以使用递归和迭代两种方式进行实现</description>
    </item>
    
    <item>
      <title>排序算法之快速排序</title>
      <link>https://ytop.net/post/quicksort/</link>
      <pubDate>Fri, 09 Feb 2018 21:53:54 +0800</pubDate>
      
      <guid>https://ytop.net/post/quicksort/</guid>
      <description>快速排序是图灵奖得主 C. R. A. Hoare 于 1960 年提出的一种划分交换排序。它采用了一种分治的策略，通常称其为分治法(Divide-and-ConquerMethod)。
分治法的基本思想是：将原问题分解为若干个规模更小但结构与原问题相似的子问题。递归地解这些子问题，然后将这些子问题的解组合为原问题的解。
利用分治法可将快速排序的分为三步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在数据集之中，选择一个元素作为”基准”（pivot）。&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>排序算法之希尔排序</title>
      <link>https://ytop.net/post/shellsort/</link>
      <pubDate>Thu, 08 Feb 2018 21:53:54 +0800</pubDate>
      
      <guid>https://ytop.net/post/shellsort/</guid>
      <description>希尔排序(Shell&amp;rsquo;s Sort)也称递减增量排序算法，是插入排序的一种更高效的改进版本。但希尔排序是非稳定排序算法。 希尔排序是基于插入排序的以下两点性质而提出改进方法的： * 插入排序在对几乎已经排好序的数据操作时，效率高，即可以达到线性排序的效率； * 但插入排序一般来说是低效的，因为插入排序每次只能将数据移动一位；
希尔排序的基本思想是：先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，待整个序列中的记录基本有序时，再对全体记录进行依次直接插入排序。</description>
    </item>
    
    <item>
      <title>排序算法之直接插入排序</title>
      <link>https://ytop.net/post/straightinsertionsort/</link>
      <pubDate>Thu, 08 Feb 2018 21:53:54 +0800</pubDate>
      
      <guid>https://ytop.net/post/straightinsertionsort/</guid>
      <description>常见的内部排序算法有：冒泡排序、选择排序、插入排序、希尔排序、归并排序、快速排序、堆排序、基数排序等。这里主要介绍直接插入排序. 直接插入排序(Straight Insertion Sort)的基本思想是：把n个待排序的元素看成为一个有序表和一个无序表。开始时有序表中只包含1个元素，无序表中包含有n-1个元素，排序过程中每次从无序表中取出第一个元素，将它插入到有序表中的适当位置，使之成为新的有序表，重复n-1次可完成排序过程。</description>
    </item>
    
    <item>
      <title>排序算法之选择排序</title>
      <link>https://ytop.net/post/selectionsort/</link>
      <pubDate>Thu, 08 Feb 2018 21:53:54 +0800</pubDate>
      
      <guid>https://ytop.net/post/selectionsort/</guid>
      <description>选择排序（Selection sort）是一种简单直观的排序算法。它的工作原理是每一次从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完。 选择排序是不稳定的排序方法（比如序列[5， 5， 3]第一次就将第一个[5]与[3]交换，导致第一个5挪动到第二个5后面）。</description>
    </item>
    
    <item>
      <title>排序算法之冒泡排序</title>
      <link>https://ytop.net/post/bubblesort/</link>
      <pubDate>Thu, 08 Feb 2018 10:53:54 +0800</pubDate>
      
      <guid>https://ytop.net/post/bubblesort/</guid>
      <description>冒泡排序（Bubble Sort），是一种计算机科学领域的较简单的排序算法。 它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。 这个算法的名字由来是因为越大的元素会经由交换慢慢“浮”到数列的顶端，故名“冒泡排序”。</description>
    </item>
    
  </channel>
</rss>