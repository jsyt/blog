<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>webpack on GOYTH</title>
    <link>https://goyth.cn/tags/webpack/</link>
    <description>Recent content in webpack on GOYTH</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 12 Jan 2019 21:53:54 +0800</lastBuildDate>
    
	<atom:link href="https://goyth.cn/tags/webpack/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Webpack 工作原理（三）</title>
      <link>https://goyth.cn/2019/01/12/webpackloader/</link>
      <pubDate>Sat, 12 Jan 2019 21:53:54 +0800</pubDate>
      
      <guid>https://goyth.cn/2019/01/12/webpackloader/</guid>
      <description>webpack Loader 是一个符合 &lt;code&gt;commonjs&lt;/code&gt; 规范的模块，这个模块导出一个函数，它的主要作用是对源码进行转换，webpack 在调用 Loader时，会将源代码作为参数传递给这个Loader，然后该loader会对源码进行转换，并且返回转换后的内容。</description>
    </item>
    
    <item>
      <title>Webpack 工作原理（二）——打包构建流程分析</title>
      <link>https://goyth.cn/2018/12/10/webpackflow/</link>
      <pubDate>Mon, 10 Dec 2018 21:53:54 +0800</pubDate>
      
      <guid>https://goyth.cn/2018/12/10/webpackflow/</guid>
      <description>webpack 主要工作流程 Webpack 的运行流程是一个串行的过程，从启动到结束会依次执行以下流程： &lt;strong&gt;初始化参数&lt;/strong&gt;：从配置文件和 Shell 语句中读取与合并参数，得出最终的参数； - &lt;strong&gt;开始编译&lt;/strong&gt;：用上一步得到的参数初始化 Compiler 对象，加载所有配置的插件，执行对象的run方法开始执行编译； 确定入口：根据配置中的 entry 找出所有的入口文件 - &lt;strong&gt;编译模块&lt;/strong&gt;：从入口文件出发，调用所有配置的 Loader 对模块进行编译，再找出该模块依赖的模块，再递归本步骤直到所有入口依赖的文件都经过了本步骤的处理；</description>
    </item>
    
    <item>
      <title>Webpack 工作原理（一）——配置篇</title>
      <link>https://goyth.cn/2018/11/17/webpackconfig/</link>
      <pubDate>Sat, 17 Nov 2018 21:53:54 +0800</pubDate>
      
      <guid>https://goyth.cn/2018/11/17/webpackconfig/</guid>
      <description>WebPack可以看做是模块打包机：它做的事情是，分析你的项目结构，找到JavaScript模块以及其它的一些浏览器不能直接运行的拓展语言（Scss，TypeScript等），并将其打包为合适的格式以供浏览器使用。构建就是把源代码转换成发布到线上的可执行 JavaScrip、CSS、HTML 代码，包括如下内容。</description>
    </item>
    
  </channel>
</rss>